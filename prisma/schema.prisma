generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  name         String
  email        String  @unique
  passwordHash String
  isSubscribed Boolean @default(false)
  role         String  @default("user")

  // Ø§Ù„Ø­Ù‚ÙˆÙ„ Ø§Ù„Ø¬Ø¯ÙŠØ¯Ø©
  weight        Int?
  height        Int?
  age           Int?
  gender        String?
  activityLevel String?
  goal          String?

  // Ø§Ù„Ø®Ø·Ø© Ø§Ù„Ù…Ø­Ø³ÙˆØ¨Ø©
  plan Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // ðŸ‘‡ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„ Ù‡Ùˆ Ø§Ù„Ø¹ÙƒØ³ÙŠ Ù„Ø¹Ù„Ø§Ù‚Ø© PasswordResetToken
  resetTokens PasswordResetToken[]
}

model Announcement {
  id        Int       @id @default(autoincrement())
  title     String
  body      String
  isActive  Boolean   @default(true)
  startsAt  DateTime  @default(now())
  endsAt    DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}
